apiVersion: v1
kind: Service
metadata:
  name: challenge-app
spec:
  ports:
    - name: tcp3000
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: challenge-app
  sessionAffinity: ClientIP
  type: LoadBalancer

---

apiVersion: v1
kind: Secret
metadata:
  name: challenge-app
data:
  MARIADB_DATABASE: Y2hhbGVuZ2U=
  MARIADB_DOCKER_PORT: MzMwNg==
  MARIADB_LOCAL_PORT: MzMwNg==
  MARIADB_PASSWORD: Y2hhbGVuZ2U=
  MARIADB_ROOT_PASSWORD: Y2hhbGVuZ2U=
  MARIADB_USER: Y2hhbGVuZ2U=
  NODE_DOCKER_PORT: MzAwMA==
  NODE_LOCAL_PORT: MzAwMA==

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: challenge-app
  name: challenge-app
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: challenge-app
  template:
    metadata:
      labels:
        app: challenge-app
    spec:
      containers:
      - name: challenge-app
        # image: rldourado/challenge-app:latest
        image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        command:
        - sh
        stdin: true
        tty: true
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 20m
            memory: 64Mi
        ports:
          - name: tcp3000
            containerPort: 3000
        envFrom:
          - secretRef:
              name: challenge-app
      restartPolicy: Always
      imagePullSecrets:
      - name: ecrcred

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: challenge-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: challenge-app.127.0.0.1.nip.io
      http:
        paths:
          - backend:
              service:
                name: challenge-app
                port:
                  number: 3000
            path: /
            pathType: ImplementationSpecific
